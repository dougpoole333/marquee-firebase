{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\n\nclass Installs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getInstalls\", async () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      let shopOrigin = urlParams.get('shop');\n      let shopName = urlParams.get('shop').split(\".\")[0];\n      fetch(\"/\" + shopName + \"/installs\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(json => {\n        this.setState({\n          installs: json.data\n        });\n      });\n    });\n\n    _defineProperty(this, \"renderInstalls\", () => {\n      if (this.state.installs.length > 0) {\n        let arr = this.state.installs.map((el, index) => {\n          return React.createElement(\"h1\", {\n            id: index\n          }, el.themeName, \", \", el.themeID, \", \", el.date);\n        });\n        return arr;\n      }\n    });\n\n    this.state = {\n      installs: []\n    };\n  }\n\n  componentDidMount() {\n    this.getInstalls();\n  }\n\n  render() {\n    return React.createElement(Layout.Section, null, this.state.installs.length > 0 ? this.renderInstalls() : React.createElement(Spinner, null));\n  }\n\n}\n\nexport default Installs;","map":{"version":3,"sources":["/Users/dpoole/DEV/marquee-firebase/pages/installs.js"],"names":["EmptyState","Spinner","Layout","Page","Select","Button","Installs","React","Component","constructor","props","urlParams","URLSearchParams","window","location","search","shopOrigin","get","shopName","split","fetch","method","then","response","json","setState","installs","data","state","length","arr","map","el","index","themeName","themeID","date","componentDidMount","getInstalls","render","renderInstalls"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4CC,MAA5C,EAAoDC,MAApD,QAAkE,kBAAlE;;AAEA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,yCAWJ,YAAY;AACtB,UAAIC,SAAS,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAhB;AACA,UAAIC,UAAU,GAAGL,SAAS,CAACM,GAAV,CAAc,MAAd,CAAjB;AACA,UAAIC,QAAQ,GAAGP,SAAS,CAACM,GAAV,CAAc,MAAd,EAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAf;AACAC,MAAAA,KAAK,CAAC,MAAIF,QAAJ,GAAa,WAAd,EAA2B;AAAEG,QAAAA,MAAM,EAAE;AAAV,OAA3B,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAG;AACT,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAEF,IAAI,CAACG;AAAhB,SAAd;AACH,OAJD;AAKH,KApBiB;;AAAA,4CAsBD,MAAM;AACrB,UAAI,KAAKC,KAAL,CAAWF,QAAX,CAAoBG,MAApB,GAA6B,CAAjC,EAAmC;AACjC,YAAIC,GAAG,GAAG,KAAKF,KAAL,CAAWF,QAAX,CAAoBK,GAApB,CAAyB,CAACC,EAAD,EAAKC,KAAL,KAAe;AAAE,iBAChD;AAAI,YAAA,EAAE,EAAEA;AAAR,aAAgBD,EAAE,CAACE,SAAnB,QAAgCF,EAAE,CAACG,OAAnC,QAA8CH,EAAE,CAACI,IAAjD,CADgD;AAGnD,SAHS,CAAV;AAIA,eAAON,GAAP;AACD;AACF,KA9BiB;;AAEhB,SAAKF,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDW,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,WAAL;AACD;;AAuBDC,EAAAA,MAAM,GAAE;AAEN,WACE,oBAAC,MAAD,CAAQ,OAAR,QACG,KAAKX,KAAL,CAAWF,QAAX,CAAoBG,MAApB,GAA6B,CAA7B,GAAiC,KAAKW,cAAL,EAAjC,GAAyD,oBAAC,OAAD,OAD5D,CADF;AAKD;;AAxCoC;;AA8CvC,eAAelC,QAAf","sourcesContent":["import { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\n\nclass Installs extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      installs: []\n    };\n  }\n\n  componentDidMount(){\n    this.getInstalls()\n  }\n\n  getInstalls = async () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      let shopOrigin = urlParams.get('shop');\n      let shopName = urlParams.get('shop').split(\".\")[0]\n      fetch(\"/\"+shopName+\"/installs\", { method: \"GET\"})\n      .then(response => response.json())\n      .then(json =>{\n          this.setState({installs: json.data})\n      })\n  }\n\n  renderInstalls = () => {\n    if (this.state.installs.length > 0){\n      let arr = this.state.installs.map( (el, index) => { return(\n          <h1 id={index}>{el.themeName}, {el.themeID}, {el.date}</h1>\n        )\n      })\n      return arr\n    }\n  }\n\n  render(){\n\n    return(\n      <Layout.Section>\n        {this.state.installs.length > 0 ? this.renderInstalls() : <Spinner/>}\n      </Layout.Section>\n    )\n  }\n\n\n\n}\n\nexport default Installs\n"]},"metadata":{},"sourceType":"module"}