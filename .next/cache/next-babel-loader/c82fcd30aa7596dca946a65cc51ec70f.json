{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { EmptyState, Spinner, Layout, Page, Card, Select, Button } from '@shopify/polaris';\nimport Installs from './installs.js';\nimport Cookies from 'js-cookie';\nimport \"./styles/selector.css\";\n\nvar Selector =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Selector, _React$Component);\n\n  function Selector(props) {\n    var _this;\n\n    _classCallCheck(this, Selector);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Selector).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getThemes\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var urlParams, shopOrigin, shopName;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              urlParams = new URLSearchParams(window.location.search);\n              shopOrigin = urlParams.get('shop');\n              shopName = urlParams.get('shop').split(\".\")[0];\n              fetch(\"/themes/\" + shopName, {\n                method: \"GET\"\n              }).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                return _this.setState({\n                  themes: json.data.themes,\n                  shopName: shopName,\n                  loading: false\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"getInstalls\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var urlParams, shopOrigin, shopName;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              urlParams = new URLSearchParams(window.location.search);\n              shopOrigin = urlParams.get('shop');\n              shopName = urlParams.get('shop').split(\".\")[0];\n              fetch(\"/\" + shopName + \"/installs\", {\n                method: \"GET\"\n              }).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                _this.setState({\n                  installs: json.data\n                });\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (newValue) {\n      _this.setState({\n        selected: newValue\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerReset\", function () {\n      _this.setState({\n        selected: ''\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSelector\", function () {\n      return React.createElement(\"div\", {\n        className: \"line\"\n      }, React.createElement(Select, {\n        options: _this.state.themes ? _this.state.themes.map(function (el) {\n          return {\n            label: \"\".concat(el.name),\n            value: \"\".concat(el.id)\n          };\n        }) : null,\n        onChange: _this.handleChange,\n        value: _this.state.selected,\n        placeholder: \"select a theme\"\n      }), React.createElement(Button, {\n        primary: true,\n        onClick: _this.assetUpdateRequest\n      }, \"Add\"));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInstalls\", function () {\n      return React.createElement(Card, null, React.createElement(Installs, {\n        shopName: _this.state.shopName,\n        installs: _this.state.installs\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"assetUpdateRequest\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var fetchUrl, method;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fetchUrl = \"\".concat(_this.state.shopName, \"/\").concat(_this.state.selected);\n              method = \"PUT\";\n              fetch(fetchUrl, {\n                method: method\n              }).then(function (response) {\n                return response.json();\n              }).then(function (json) {\n                if (json.status === 'success') {\n                  _this.setState({\n                    loading: false\n                  });\n                }\n              }).then(function () {\n                _this.getInstalls();\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })));\n\n    _this.state = {\n      shopName: '',\n      selected: '',\n      themes: [],\n      installs: []\n    };\n    return _this;\n  }\n\n  _createClass(Selector, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getThemes();\n      this.getInstalls();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, null, this.renderSelector(), this.renderInstalls());\n    }\n  }]);\n\n  return Selector;\n}(React.Component);\n\nexport default Selector;","map":{"version":3,"sources":["/Users/userone/Documents/App-dev/marquee-firebase/pages/selector.js"],"names":["EmptyState","Spinner","Layout","Page","Card","Select","Button","Installs","Cookies","Selector","props","urlParams","URLSearchParams","window","location","search","shopOrigin","get","shopName","split","fetch","method","then","response","json","setState","themes","data","loading","installs","newValue","selected","state","map","el","label","name","value","id","handleChange","assetUpdateRequest","fetchUrl","status","getInstalls","getThemes","renderSelector","renderInstalls","React","Component"],"mappings":"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","sourcesContent":["import { EmptyState, Spinner, Layout, Page, Card, Select, Button } from '@shopify/polaris';\nimport Installs from './installs.js'\nimport Cookies from 'js-cookie';\n\nimport \"./styles/selector.css\"\n\nclass Selector extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      shopName: '',\n      selected: '',\n      themes: [],\n      installs: []\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n    this.getInstalls()\n  }\n\n  render() {\n    return (\n        <Card>\n          {this.renderSelector()}\n          {this.renderInstalls()}\n        </Card>\n    );\n  };\n\n  getThemes = async () => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let shopOrigin = urlParams.get('shop');\n    let shopName = urlParams.get('shop').split(\".\")[0]\n    fetch(\"/themes/\" + shopName, { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes, shopName: shopName, loading: false}))\n  };\n\n  getInstalls = async () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      let shopOrigin = urlParams.get('shop');\n      let shopName = urlParams.get('shop').split(\".\")[0]\n      fetch(\"/\"+shopName+\"/installs\", { method: \"GET\"})\n      .then(response => response.json())\n      .then(json =>{\n          this.setState({installs: json.data})\n      })\n  }\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  triggerReset = () => {\n    this.setState({\n      selected: ''\n    })\n  }\n\n  renderSelector = () => {\n      return(\n        <div className=\"line\">\n          <Select\n            options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n            onChange={this.handleChange}\n            value={this.state.selected}\n            placeholder = \"select a theme\"\n            />\n          <Button primary onClick={this.assetUpdateRequest}>Add</Button>\n        </div>\n      )\n  }\n\n  renderInstalls = () => {\n      return(\n        <Card><Installs shopName={this.state.shopName} installs={this.state.installs}/></Card>\n      )\n  }\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = `${this.state.shopName}/${this.state.selected}`;\n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({loading: false})\n      }\n    })\n    .then( () => {\n      this.getInstalls()\n    })\n  }\n}\n\nexport default Selector;\n"]},"metadata":{},"sourceType":"module"}