{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { EmptyState, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getThemes\", async () => {\n      fetch(\"/themes\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(json => this.setState({\n        themes: json.data.themes\n      }));\n    });\n\n    _defineProperty(this, \"handleChange\", newValue => {\n      this.setState({\n        selected: newValue\n      });\n    });\n\n    _defineProperty(this, \"renderRedirect\", () => {\n      if (this.state.redirect) {\n        return React.createElement(\"a\", {\n          target: \"_blank\",\n          style: {\n            textDecoration: 'none'\n          },\n          href: 'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`\n        }, React.createElement(Button, {\n          primary: true\n        }, \"GO TO CUSTOMIZER\"));\n      }\n    });\n\n    _defineProperty(this, \"renderSelector\", () => {\n      if (this.state.selecting) {\n        return React.createElement(\"div\", null, React.createElement(Select, {\n          options: this.state.themes ? this.state.themes.map(el => {\n            return {\n              label: `${el.name}`,\n              value: `${el.id}`\n            };\n          }) : null,\n          onChange: this.handleChange,\n          value: this.state.selected,\n          placeholder: \"select a theme\"\n        }), React.createElement(Button, {\n          primary: true,\n          onClick: this.assetUpdateRequest\n        }, \"Add\"));\n      }\n    });\n\n    _defineProperty(this, \"assetUpdateRequest\", async () => {\n      var fetchUrl = \"/api/\" + this.state.selected;\n      var method = \"PUT\";\n      fetch(fetchUrl, {\n        method: method\n      }).then(response => response.json()).then(json => {\n        if (json.status === 'success') {\n          this.setState({\n            redirect: true,\n            selecting: false\n          });\n        }\n      });\n    });\n\n    this.state = {\n      selecting: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.getThemes();\n  }\n\n  render() {\n    return React.createElement(Page, null, React.createElement(Layout, null, this.renderSelector(), this.renderRedirect()));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/dpoole/DEV/marquee3/pages/index.js"],"names":["EmptyState","Layout","Page","Select","Button","Cookies","img","Index","React","Component","constructor","props","fetch","method","then","response","json","setState","themes","data","newValue","selected","state","redirect","textDecoration","get","selecting","map","el","label","name","value","id","handleChange","assetUpdateRequest","fetchUrl","status","componentDidMount","getThemes","render","renderSelector","renderRedirect"],"mappings":"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","sourcesContent":["import { EmptyState, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\n\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selecting: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n  }\n\n  render() {\n    return (\n      <Page>\n        <Layout>\n          {this.renderSelector()}\n          {this.renderRedirect()}\n          \n        </Layout>\n      </Page>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return (\n        <a\n          target=\"_blank\"\n          style={{textDecoration: 'none'}}\n          href={'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`}>\n            <Button primary>GO TO CUSTOMIZER</Button>\n        </a>)\n    }\n  }\n\n  renderSelector = () => {\n    if (this.state.selecting){\n      return(\n        <div>\n          <Select\n            options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n            onChange={this.handleChange}\n            value={this.state.selected}\n            placeholder = \"select a theme\"\n            />\n          <Button primary onClick={this.assetUpdateRequest}>Add</Button>\n        </div>\n      )\n    }\n  }\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = \"/api/\" + this.state.selected; \n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({redirect: true, selecting: false})\n      }\n    })\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}