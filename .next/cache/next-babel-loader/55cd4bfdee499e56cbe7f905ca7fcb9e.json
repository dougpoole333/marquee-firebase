{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { EmptyState, Layout, Page, Select } from '@shopify/polaris';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getThemes\", async () => {\n      fetch(\"/themes\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(json => this.setState({\n        themes: json.data.themes\n      }));\n    });\n\n    _defineProperty(this, \"handleChange\", newValue => {\n      this.setState({\n        selected: newValue\n      });\n    });\n\n    _defineProperty(this, \"assetUpdateRequest\", async () => {\n      var fetchUrl = \"/api/\" + this.state.selected;\n      var method = \"PUT\";\n      fetch(fetchUrl, {\n        method: method\n      }).then(response => response.json()).then(json => console.log(json));\n    });\n\n    this.state = {\n      selected: '',\n      themes: []\n    };\n  }\n\n  componentDidMount() {\n    this.getThemes();\n  }\n\n  render() {\n    return React.createElement(Page, null, React.createElement(Layout, null, React.createElement(EmptyState, {\n      heading: \"Add the Marquee section to your theme\",\n      action: {\n        content: 'Add',\n        onAction: () => this.assetUpdateRequest()\n      }\n    }, React.createElement(Select, {\n      options: this.state.themes ? this.state.themes.map(el => {\n        return {\n          label: `${el.name}`,\n          value: `${el.id}`\n        };\n      }) : null,\n      onChange: this.handleChange,\n      value: this.state.selected,\n      placeholder: \"select a theme\"\n    }))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/dpoole/DEV/marquee3/pages/index.js"],"names":["EmptyState","Layout","Page","Select","img","Index","React","Component","constructor","props","fetch","method","then","response","json","setState","themes","data","newValue","selected","fetchUrl","state","console","log","componentDidMount","getThemes","render","content","onAction","assetUpdateRequest","map","el","label","name","value","id","handleChange"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAiD,kBAAjD;AACA,MAAMC,GAAG,GAAG,mEAAZ;;AAEA,MAAMC,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,uCAoCN,YAAY;AACtBC,MAAAA,KAAK,CAAC,SAAD,EAAY;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAZ,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEF,IAAI,CAACG,IAAL,CAAUD;AAAnB,OAAd,CAFd;AAGD,KAxCiB;;AAAA,0CA0CFE,QAAD,IAAc;AAC3B,WAAKH,QAAL,CAAc;AAACI,QAAAA,QAAQ,EAAED;AAAX,OAAd;AACD,KA5CiB;;AAAA,gDA8CG,YAAY;AAC/B,UAAIE,QAAQ,GAAG,UAAU,KAAKC,KAAL,CAAWF,QAApC;AACA,UAAIR,MAAM,GAAG,KAAb;AACAD,MAAAA,KAAK,CAACU,QAAD,EAAW;AAAET,QAAAA,MAAM,EAAEA;AAAV,OAAX,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIQ,OAAO,CAACC,GAAR,CAAYT,IAAZ,CAFd;AAGD,KApDiB;;AAEhB,SAAKO,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE,EADC;AAEXH,MAAAA,MAAM,EAAE;AAFG,KAAb;AAID;;AAEDQ,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,SAAL;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD,QACE,oBAAC,MAAD,QACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,uCADV;AAEE,MAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE,KADH;AAENC,QAAAA,QAAQ,EAAE,MAAM,KAAKC,kBAAL;AAFV;AAFV,OAOE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAI,KAAKR,KAAL,CAAWL,MAAX,GAAoB,KAAKK,KAAL,CAAWL,MAAX,CAAkBc,GAAlB,CAAsBC,EAAE,IAAI;AAAC,eAAM;AAACC,UAAAA,KAAK,EAAG,GAAED,EAAE,CAACE,IAAK,EAAnB;AAAsBC,UAAAA,KAAK,EAAE,GAAEH,EAAE,CAACI,EAAG;AAArC,SAAN;AAA8C,OAA3E,CAApB,GAAmG,IADhH;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWF,QAHpB;AAIE,MAAA,WAAW,EAAG;AAJhB,MAPF,CADF,CADF,CADF;AAoBD;;AAlCiC;;AAwDpC,eAAed,KAAf","sourcesContent":["import { EmptyState, Layout, Page, Select } from '@shopify/polaris';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: '',\n      themes: []\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n  }\n\n  render() {\n    return (\n      <Page>\n        <Layout>\n          <EmptyState\n            heading=\"Add the Marquee section to your theme\"\n            action={{\n              content: 'Add',\n              onAction: () => this.assetUpdateRequest()\n            }}\n          >\n            <Select\n              options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n              onChange={this.handleChange}\n              value={this.state.selected}\n              placeholder = \"select a theme\"\n               />\n          </EmptyState>\n        </Layout>\n      </Page>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = \"/api/\" + this.state.selected; \n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => console.log(json))\n  }\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}