{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"getThemes\", async () => {\n      fetch(\"/themes\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(json => this.setState({\n        themes: json.data.themes,\n        loading: false\n      }));\n    });\n\n    _defineProperty(this, \"handleChange\", newValue => {\n      this.setState({\n        selected: newValue\n      });\n    });\n\n    _defineProperty(this, \"renderRedirect\", () => {\n      if (this.state.redirect && !this.state.loading) {\n        return React.createElement(EmptyState, null, React.createElement(\"a\", {\n          target: \"_blank\",\n          style: {\n            textDecoration: 'none'\n          },\n          href: 'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`\n        }, React.createElement(Button, {\n          primary: true\n        }, \"OPEN CUSTOMIZER\")), React.createElement(Button, {\n          primary: true,\n          onClick: this.triggerReset\n        }, \"ADD MARQUEE TO ANOTHER THEME\"));\n      }\n    });\n\n    _defineProperty(this, \"renderSpinner\", () => {\n      if (this.state.loading) {\n        return React.createElement(EmptyState, null, React.createElement(Spinner, null));\n      }\n    });\n\n    _defineProperty(this, \"triggerReset\", () => {\n      this.setState({\n        selecting: true,\n        selected: '',\n        redirect: false\n      });\n    });\n\n    _defineProperty(this, \"renderSelector\", () => {\n      if (this.state.selecting && !this.state.loading) {\n        return React.createElement(EmptyState, null, React.createElement(Select, {\n          options: this.state.themes ? this.state.themes.map(el => {\n            return {\n              label: `${el.name}`,\n              value: `${el.id}`\n            };\n          }) : null,\n          onChange: this.handleChange,\n          value: this.state.selected,\n          placeholder: \"select a theme\"\n        }), React.createElement(Button, {\n          primary: true,\n          onClick: this.assetUpdateRequest\n        }, \"Add\"));\n      }\n    });\n\n    _defineProperty(this, \"assetUpdateRequest\", async () => {\n      this.state.selected ? this.setState({\n        loading: true\n      }) : null;\n      var fetchUrl = \"/api/\" + this.state.selected;\n      var method = \"PUT\";\n      fetch(fetchUrl, {\n        method: method\n      }).then(response => response.json()).then(json => {\n        if (json.status === 'success') {\n          this.setState({\n            redirect: true,\n            selecting: false,\n            loading: false\n          });\n        }\n      });\n    });\n\n    this.state = {\n      selecting: true,\n      loading: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount() {\n    this.getThemes();\n  }\n\n  render() {\n    return React.createElement(Page, null, React.createElement(Layout, null, this.renderSelector(), this.renderRedirect(), this.renderSpinner()));\n  }\n\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}