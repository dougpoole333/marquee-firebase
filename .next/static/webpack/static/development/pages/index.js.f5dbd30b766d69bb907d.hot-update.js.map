{"version":3,"file":"static/webpack/static/development/pages/index.js.f5dbd30b766d69bb907d.hot-update.js","sources":["webpack:///./pages/selector.js"],"sourcesContent":["import { EmptyState, Spinner, Layout, Page, Card, Select, Button } from '@shopify/polaris';\nimport Installs from './installs.js'\nimport Cookies from 'js-cookie';\n\nimport \"./styles/selector.css\"\n\nclass Selector extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      shopName: '',\n      selected: '',\n      themes: [],\n      installs: []\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n    this.getInstalls()\n  }\n\n  render() {\n    return (\n        <Card>\n          {this.renderSelector()}\n          {this.renderInstalls()}\n        </Card>\n    );\n  };\n\n  getThemes = async () => {\n    let urlParams = new URLSearchParams(window.location.search);\n    let shopOrigin = urlParams.get('shop');\n    let shopName = urlParams.get('shop').split(\".\")[0]\n    fetch(\"/themes/\" + shopName, { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes, shopName: shopName, loading: false}))\n  };\n\n  getInstalls = async () => {\n      let urlParams = new URLSearchParams(window.location.search);\n      let shopOrigin = urlParams.get('shop');\n      let shopName = urlParams.get('shop').split(\".\")[0]\n      fetch(\"/\"+shopName+\"/installs\", { method: \"GET\"})\n      .then(response => response.json())\n      .then(json =>{\n          this.setState({installs: json.data})\n      })\n  }\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  triggerReset = () => {\n    this.setState({\n      selected: ''\n    })\n  }\n\n  renderSelector = () => {\n      return(\n        <div className=\"selector-header\">\n          <Select\n            options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n            onChange={this.handleChange}\n            value={this.state.selected}\n            placeholder = \"select a theme\"\n            />\n          <Button primary onClick={this.assetUpdateRequest}>Add</Button>\n        </div>\n      )\n  }\n\n  renderInstalls = () => {\n      return(\n        <Card><Installs shopName={this.state.shopName} installs={this.state.installs}/></Card>\n      )\n  }\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = `${this.state.shopName}/${this.state.selected}`;\n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({loading: false})\n      }\n    })\n    .then( () => {\n      this.getInstalls()\n    })\n  }\n}\n\nexport default Selector;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlCA;AA6CA;AAAA;AAAA;AACA;AACA;AA/CA;AAiDA;AACA;AADA;AAGA;AACA;AArDA;AAuDA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAGA;AACA;AAnEA;AAqEA;AACA;AAAA;AAAA;AAEA;AACA;AAzEA;AAAA;AAAA;AAAA;AAAA;AA0EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAMA;;;;AAvBA;AACA;AA0FA;;;;A","sourceRoot":""}