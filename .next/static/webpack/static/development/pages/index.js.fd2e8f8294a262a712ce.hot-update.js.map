{"version":3,"file":"static/webpack/static/development/pages/index.js.fd2e8f8294a262a712ce.hot-update.js","sources":["webpack:///./pages/selector.js"],"sourcesContent":["import { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\n\nclass Selector extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selecting: true,\n      loading: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n    console.log(\"test \" + window.location)\n  }\n\n  render() {\n    return (\n        <Layout.Section>\n          {this.renderSelector()}\n          {this.renderRedirect()}\n          {this.renderSpinner()}\n        </Layout.Section>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes, loading: false}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect && !this.state.loading) {\n      return (\n        <Layout.Section>\n          <a\n            target=\"_blank\"\n            style={{textDecoration: 'none'}}\n            href={'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`}>\n              <Button primary>OPEN CUSTOMIZER</Button>\n          </a>\n\n          <Button primary onClick={this.triggerReset}>ADD MARQUEE TO ANOTHER THEME</Button>\n        </Layout.Section>\n      )\n    }\n  }\n\n  renderSpinner = () => {\n    if(this.state.loading){\n      return (\n        <EmptyState>\n          <Spinner/>\n        </EmptyState>\n      )\n    }\n  }\n\n  triggerReset = () => {\n    this.setState({\n      selecting: true,\n      selected: '',\n      redirect: false\n    })\n  }\n\n  renderSelector = () => {\n    if (this.state.selecting && !this.state.loading){\n      return(\n        <EmptyState sty>\n          <Select\n            options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n            onChange={this.handleChange}\n            value={this.state.selected}\n            placeholder = \"select a theme\"\n            />\n          <Button primary onClick={this.assetUpdateRequest}>Add</Button>\n        </EmptyState>\n      )\n    }\n  }\n\n  assetUpdateRequest = async () => {\n    this.state.selected ? this.setState({loading: true}) : null\n    var fetchUrl = \"/api/\" + this.state.selected;\n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({redirect: true, selecting: false, loading: false})\n      }\n    })\n  }\n}\n\nexport default Selector;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5BA;AAkCA;AAAA;AAAA;AACA;AACA;AApCA;AAsCA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AArDA;AAuDA;AACA;AAKA;AACA;AACA;AA/DA;AAiEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAvEA;AAyEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAGA;AACA;AACA;AAvFA;AAAA;AAAA;AAAA;AAAA;AAwFA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvFA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAOA;;;;AAzBA;AACA;AAsGA;;;;A","sourceRoot":""}