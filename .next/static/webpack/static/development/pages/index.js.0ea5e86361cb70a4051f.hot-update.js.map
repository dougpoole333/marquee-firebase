{"version":3,"file":"static/webpack/static/development/pages/index.js.0ea5e86361cb70a4051f.hot-update.js","sources":["webpack:///./pages/help-info.js","webpack:///./pages/help.js","webpack:///./pages/index.js","webpack:///./pages/selector.js","webpack:///./pages/walkthrough-info.js","webpack:///./pages/window.js"],"sourcesContent":["class WalkthroughInfo extends React.Component {\n\n  render(){\n      if(this.props.field == \"faq\"){\n        return(\n          <h1>THIS IS THE FAQ SECTION</h1>\n        )\n      }\n      if(this.props.field == \"contact-us\"){\n        return(\n          <h1>THIS IS CONTACT US SECTION</h1>\n        )\n      }\n      if(this.props.field == \"other-products\"){\n        return(\n          <h1>THIS IS THE OTHER PRODUCTS SECTION</h1>\n        )\n      }\n  }\n}\n\nexport default WalkthroughInfo\n","import { Card, Tabs } from '@shopify/polaris';\nimport HelpInfo from './help-info.js'\n\nclass Help extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: 0\n    };\n  }\n\n  handleTabChange = (selectedTabIndex) => {\n    this.setState({selected: selectedTabIndex});\n  };\n\n  render() {\n    const selected = this.state.selected;\n    const tabs = [\n      {\n        id: 'faq',\n        content: 'FAQ'\n      },\n      {\n        id: 'contact-us',\n        content: 'Contact Us'\n      },\n      {\n        id: 'other-products',\n        content: 'Other Products'\n      }\n    ];\n\n    return (\n      <Card>\n        <Tabs tabs={tabs} selected={selected} onSelect={this.handleTabChange}>\n          <Card.Section title={tabs[selected].header}>\n            <HelpInfo field={tabs[selected].id} />\n          </Card.Section>\n        </Tabs>\n      </Card>\n    );\n  }\n}\n\nexport default Help\n","import { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nimport Selector from './selector.js'\nimport Window from './window.js'\nimport Help from './help.js'\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n      <Page>\n        <Layout.Section>\n            <Selector />\n        </Layout.Section>\n        <Layout.Section>\n            <Window />\n        </Layout.Section>\n        <Layout.Section>\n            <Help />\n        </Layout.Section>\n      </Page>\n    );\n  };\n}\n\nexport default Index;\n","import { EmptyState, Spinner, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\n\nclass Selector extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selecting: true,\n      loading: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n  }\n\n  render() {\n    return (\n        <Layout.Section>\n          {this.renderSelector()}\n          {this.renderRedirect()}\n          {this.renderSpinner()}\n        </Layout.Section>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes, loading: false}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect && !this.state.loading) {\n      return (\n        <Layout.Section>\n          <a\n            target=\"_blank\"\n            style={{textDecoration: 'none'}}\n            href={'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`}>\n              <Button primary>OPEN CUSTOMIZER</Button>\n          </a>\n\n          <Button primary onClick={this.triggerReset}>ADD MARQUEE TO ANOTHER THEME</Button>\n        </Layout.Section>\n      )\n    }\n  }\n\n  renderSpinner = () => {\n    if(this.state.loading){\n      return (\n        <EmptyState>\n          <Spinner/>\n        </EmptyState>\n      )\n    }\n  }\n\n  triggerReset = () => {\n    this.setState({\n      selecting: true,\n      selected: '',\n      redirect: false\n    })\n  }\n\n  renderSelector = () => {\n    if (this.state.selecting && !this.state.loading){\n      return(\n        <EmptyState sty>\n          <Select\n            options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n            onChange={this.handleChange}\n            value={this.state.selected}\n            placeholder = \"select a theme\"\n            />\n          <Button primary onClick={this.assetUpdateRequest}>Add</Button>\n        </EmptyState>\n      )\n    }\n  }\n\n  assetUpdateRequest = async () => {\n    this.state.selected ? this.setState({loading: true}) : null\n    var fetchUrl = \"/api/\" + this.state.selected;\n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({redirect: true, selecting: false, loading: false})\n      }\n    })\n  }\n}\n\nexport default Selector;\n","class WalkthroughInfo extends React.Component {\n\n  render(){\n      if(this.props.field == \"homepage\"){\n        return(\n          <h1>THIS IS THE HOMEPAGE INFO SECTION</h1>\n        )\n      }\n      if(this.props.field == \"other-pages\"){\n        return(\n          <h1>THIS IS THE OTHER PAGES SECTION</h1>\n        )\n      }\n  }\n}\n\nexport default WalkthroughInfo\n","import { Card, Tabs } from '@shopify/polaris';\nimport WalkthroughInfo from \"./walkthrough-info.js\"\n\nclass Window extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: 0\n    };\n  }\n\n  handleTabChange = (selectedTabIndex) => {\n    this.setState({selected: selectedTabIndex});\n  };\n\n  render() {\n    const selected = this.state.selected;\n    const tabs = [\n      {\n        id: 'homepage',\n        content: 'Homepage'\n      },\n      {\n        id: 'other-pages',\n        content: 'Other Pages'\n      }\n    ];\n\n    return (\n      <Card>\n        <Tabs tabs={tabs} selected={selected} onSelect={this.handleTabChange}>\n          <Card.Section title={tabs[selected].header}>\n            <WalkthroughInfo field={tabs[selected].id} />\n          </Card.Section>\n        </Tabs>\n      </Card>\n    );\n  }\n}\n\nexport default Window\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;;;;AAlBA;AACA;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AARA;AACA;AADA;AAFA;AAKA;AACA;;;AAKA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;;;;AAtCA;AACA;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AAaA;;;;AAnBA;AACA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA3BA;AAiCA;AAAA;AAAA;AACA;AACA;AAnCA;AAqCA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AApDA;AAsDA;AACA;AAKA;AACA;AACA;AA9DA;AAgEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAtEA;AAwEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAAA;AAGA;AACA;AACA;AAtFA;AAAA;AAAA;AAAA;AAAA;AAuFA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtFA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AAOA;;;;AAxBA;AACA;AAqGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;;;;;;;;;;;;;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AACA;;;;AAbA;AACA;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AARA;AACA;AADA;AAFA;AAKA;AACA;;;AAKA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;;;;AAlCA;AACA;AAoCA;;;;A","sourceRoot":""}