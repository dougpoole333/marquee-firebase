{"version":3,"file":"static/webpack/static/development/pages/index.js.27d496fb4f47fe0243dd.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { EmptyState, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\n\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n  }\n\n  render() {\n    return (\n      <Page>\n        <Layout>\n          <EmptyState\n            action={{\n              content: 'Add',\n              onAction: () => this.assetUpdateRequest()\n            }}\n          >\n            <Select\n              options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n              onChange={this.handleChange}\n              value={this.state.selected}\n              placeholder = \"select a theme\"\n               />\n          </EmptyState>\n          {this.renderRedirect()}\n        </Layout>\n      </Page>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Button url={'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`}>GO TO CUSTOMIZER</Button>\n    }\n  }\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = \"/api/\" + this.state.selected; \n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({redirect: true})\n      }\n    })\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtCA;AA4CA;AAAA;AAAA;AACA;AACA;AA9CA;AAgDA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApDA;AAAA;AAAA;AAAA;AAAA;AAqDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApDA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAWA;;;;AAnCA;AACA;AAkEA;;;;A","sourceRoot":""}