{"version":3,"file":"static/webpack/static/development/pages/index.js.e0c9c2afe38abede17e2.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { EmptyState, Layout, Page, Select, Button } from '@shopify/polaris';\nimport Cookies from 'js-cookie';\nconst img = 'https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg';\n\n\n\nclass Index extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selecting: true,\n      selected: '',\n      themes: [],\n      redirect: false\n    };\n  }\n\n  componentDidMount(){\n    this.getThemes();\n  }\n\n  render() {\n    return (\n      <Page>\n        <Layout>\n          {this.renderSelector()}\n          {this.renderRedirect()}\n          \n        </Layout>\n      </Page>\n    );\n  };\n\n\n  getThemes = async () => {\n    fetch(\"/themes\", { method: \"GET\"})\n    .then(response => response.json())\n    .then(json => this.setState({themes: json.data.themes}))\n  };\n\n  handleChange = (newValue) => {\n    this.setState({selected: newValue});\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return (\n        <a\n          target=\"_blank\"\n          style={{textDecoration: 'none'}}\n          href={'http://' + Cookies.get('shopOrigin') + `/admin/themes/${this.state.selected}/editor`}>\n            <Button primary>GO TO CUSTOMIZER</Button>\n        </a>)\n    }\n  }\n\n  renderSelector = () => {\n    if (this.state.selecting){\n      return(\n        <EmptyState\n        action={{\n          content: 'Add',\n          onAction: () => this.assetUpdateRequest()\n        }}\n      >\n        <Select\n          options = {this.state.themes ? this.state.themes.map(el => {return{label: `${el.name}`, value:`${el.id}`}}) : null}\n          onChange={this.handleChange}\n          value={this.state.selected}\n          placeholder = \"select a theme\"\n           />\n        </EmptyState>\n      )\n    }\n  }\n\n  assetUpdateRequest = async () => {\n    var fetchUrl = \"/api/\" + this.state.selected; \n    var method = \"PUT\";\n    fetch(fetchUrl, { method: method })\n    .then(response => response.json())\n    .then(json => {\n      if (json.status === 'success'){\n        this.setState({redirect: true, selecting: false})\n      }\n    })\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AA2BA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA5BA;AAkCA;AAAA;AAAA;AACA;AACA;AApCA;AAsCA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAIA;AAAA;AAEA;AACA;AACA;AAhDA;AAkDA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AApEA;AAAA;AAAA;AAAA;AAAA;AAqEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AASA;;;;AAzBA;AACA;AAkFA;;;;A","sourceRoot":""}