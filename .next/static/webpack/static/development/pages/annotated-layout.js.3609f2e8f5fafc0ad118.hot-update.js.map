{"version":3,"file":"static/webpack/static/development/pages/annotated-layout.js.3609f2e8f5fafc0ad118.hot-update.js","sources":["webpack:///./pages/annotated-layout.js"],"sourcesContent":["import {\n  Button,\n  Card,\n  Form,\n  FormLayout,\n  Layout,\n  Page,\n  SettingToggle,\n  Stack,\n  TextField,\n  TextStyle,\n} from '@shopify/polaris';\n\nimport axios from 'axios'\n\nclass AnnotatedLayout extends React.Component {\n  state = {\n    discount: '10%',\n    enabled: false,\n  };\n\n  render() {\n    const { discount, enabled } = this.state;\n    const contentStatus = enabled ? 'Disable' : 'Enable';\n    const textStatus = enabled ? 'enabled' : 'disabled';\n\n    return (\n      <Page>\n        <Layout>\n          <Layout.AnnotatedSection\n            title=\"Default discount\"\n            description=\"Add a product to Sample App, it will automatically be discounted.\"\n          >\n            <Card sectioned>\n              <Form onSubmit={this.handleSubmit}>\n                <FormLayout>\n                  <TextField\n                    value={discount}\n                    onChange={this.handleChange('discount')}\n                    label=\"Discount percentage\"\n                    type=\"discount\"\n                  />\n                  <Stack distribution=\"trailing\">\n                    <Button primary submit>\n                      Save\n                    </Button>\n                  </Stack>\n                </FormLayout>\n              </Form>\n            </Card>\n          </Layout.AnnotatedSection>\n          <Layout.AnnotatedSection\n              title=\"Price updates\"\n              description=\"Temporarily disable all Sample App price updates\"\n            >\n              <SettingToggle\n                action={{\n                  content: contentStatus,\n                  onAction: this.handleToggle,\n                }}\n                enabled={enabled}\n              >\n                This setting is{' '}\n                <TextStyle variation=\"strong\">{textStatus}</TextStyle>.\n              </SettingToggle>\n          </Layout.AnnotatedSection>\n        </Layout>\n      </Page>\n    );\n  }\n  //Access-Control-Allow-Origin:  http://127.0.0.1:3000\n// Access-Control-Allow-Methods: POST\n// Access-Control-Allow-Headers: Content-Type, Authorization\n\n    // handleSubmit = async () => {\n    //   const response = await fetch('https://bismuth-dev.myshopify.com/admin/api/2019-07/themes/75057168493/assets.json', {\n    //     method: 'PUT',\n    //     headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Methods': 'PUT', 'Access-Control-Allow-Origin':  'https://30e2e004.ngrok.io', 'Access-Control-Allow-Headers': ['Content-Type', 'Authorization'] },\n    //     body: JSON.stringify({ asset: {key: \"templates/index.liquid\", value: \"test\"} })\n    //   })\n    // };\n\n    handleSubmit = async () => {\n      var session_url = 'https://bismuth-dev.myshopify.com/admin/api/2019-07/themes/75057168493/assets.json';\n      var username = '35f5151b48c7fb8fb8c9fe4185fb7c25';\n      var password = '122b9134735957626720501cf4755623';\n      var basicAuth = 'Basic ' + btoa(username + ':' + password);\n      var body = { asset: {key: \"sections/marquee2.liquid\", value: \"test\"} }\n      axios.put(session_url, body, {\n        headers: { 'Authorization': + basicAuth }\n      }).then(function(response) {\n        console.log('Authenticated');\n      }).catch(function(error) {\n        console.log('Error on Authentication');\n      });\n      //\n      // const response = await fetch('https://bismuth-dev.myshopify.com/admin/api/2019-07/themes/75057168493/assets.json', {\n      //   method: 'PUT',\n      //   headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Methods': 'PUT', 'Access-Control-Allow-Origin':  'https://30e2e004.ngrok.io', 'Access-Control-Allow-Headers': ['Content-Type', 'Authorization'] },\n      //   body: JSON.stringify({ asset: {key: \"templates/index.liquid\", value: \"test\"} })\n      // })\n    };\n\n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n\n    handleToggle = () => {\n      this.setState(({ enabled }) => {\n        return { enabled: !enabled };\n      });\n    };\n  }\n\nexport default AnnotatedLayout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;;;;;AAiEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AA3FA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAIA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAAA;AASA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AAIA;AALA;AAQA;AAAA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAlEA;AACA;AAkGA;;;;A","sourceRoot":""}